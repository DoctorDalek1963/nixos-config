#!/usr/bin/env bash

# This script was slightly adapted from
# https://github.com/jnsgruk/nixos-config/blob/675c71cbec13c9166b37595f800129bce74a27e3/scripts/install-with-disko

set -euo pipefail
TARGET_HOST="${1:-}"

cd /iso/config

if [[ "$(id -u)" -eq 0 ]]; then
  echo "ERROR! $(basename "${0}") should be run as a regular user"
  exit 1
fi

if [[ -z "$TARGET_HOST" ]]; then
    echo "ERROR! $(basename "${0}") requires a hostname as the first argument"
    exit 1
fi

if [[ ! -e "machines/${TARGET_HOST}/disko.nix" ]]; then
    echo "ERROR! $(basename "${0}") could not find the required machines/${TARGET_HOST}/disko.nix"
    exit 1
fi

if [[ ! -e "sops-secrets/key.txt" ]]; then
    echo "ERROR! $(basename "${0}") could not find the system wide sops key in /iso/config/sops-secrets/key.txt"
    exit 1
fi

if [[ ! -e "home-manager/dyson/sops-secrets/key.txt" ]]; then
    echo "WARNING! $(basename "${0}") could not find the user-level sops key for dyson in /iso/config/home-manager/dyson/sops-secrets/key.txt"

    read -p "Do you want to continue without this secret key? [y/N]" -n 1 -r
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Check if the machine we're provisioning expects a keyfile to unlock a disk.
# If it does, generate a new key, and write to a known location.
if grep -q "luks.keyfile" "machines/${TARGET_HOST}/disko.nix"; then
  echo -n "$(head -c32 /dev/random | base64)" > /tmp/luks.keyfile
fi

echo "WARNING! The disks in ${TARGET_HOST} are about to get wiped"
echo "         NixOS will be re-installed"
echo "         This is a destructive operation"
echo
read -p "Are you sure? [y/N] " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    sudo true

    sudo DISKOCOMMAND --mode disko "machines/${TARGET_HOST}/disko.nix"

    # Rsync my nix-config to the target install
    sudo mkdir -p "/mnt/etc/nixos"
    sudo rsync -a --delete "/iso/config/" "/mnt/etc/nixos"

    # If there is a keyfile for a data disk, put copy it to the root partition and
    # ensure the permissions are set appropriately.
    if [[ -f "/tmp/luks.keyfile" ]]; then
      sudo cp /tmp/luks.keyfile /mnt/etc/luks.keyfile
      sudo chmod 0400 /mnt/etc/luks.keyfile
    fi

    sudo nixos-install --flake ".#${TARGET_HOST}"
else
	echo "Cancelling installation"
	exit 1
fi
